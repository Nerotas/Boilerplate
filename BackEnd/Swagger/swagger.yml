openapi: 3.0.0
paths:
  /health:
    get:
      operationId: HealthController_check
      parameters: []
      responses:
        '200':
          description: The Health Check is successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  error:
                    type: object
                    example: {}
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
        '503':
          description: The Health Check is not successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  info:
                    type: object
                    example:
                      database:
                        status: up
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  error:
                    type: object
                    example:
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
                    nullable: true
                  details:
                    type: object
                    example:
                      database:
                        status: up
                      redis:
                        status: down
                        message: Could not connect
                    additionalProperties:
                      type: object
                      required:
                        - status
                      properties:
                        status:
                          type: string
                      additionalProperties: true
  /about:
    get:
      operationId: AboutController_about
      parameters: []
      responses:
        '200':
          description: ''
  /products:
    get:
      operationId: ProductsController_getAllProducts
      parameters: []
      responses:
        '200':
          description: Get products formatted as a table.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/products'
    post:
      operationId: ProductsController_createProduct
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductDTO'
      responses:
        '200':
          description: Create new product.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/products'
  /products/{id}:
    put:
      operationId: ProductsController_updateProduct
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProductDTO'
      responses:
        '200':
          description: Edit existing product.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/products'
    delete:
      operationId: ProductsController_deprecateProduct
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: Edit existing product.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/products'
  /metrics:
    get:
      operationId: PrometheusController_index
      parameters: []
      responses:
        '200':
          description: ''
info:
  title: Erotas Console
  description: Erotas Console REST API
  version: '1.0'
  contact: {}
products: []
servers: []
components:
  securitySchemes:
    JWT:
      scheme: bearer
      bearerFormat: JWT
      type: http
      in: header
  schemas:
    products:
      type: object
      properties: {}
    CreateProductDTO:
      type: object
      properties: {}
